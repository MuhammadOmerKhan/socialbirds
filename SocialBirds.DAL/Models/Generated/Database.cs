
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `SMTConnection-DEV`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Server=mydbinstance.c44x77err3ju.eu-west-1.rds.amazonaws.com,1433;Database=SocialShareSolution;User ID=munawar;password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace SocialBirds.DAL.DataServices
{
	public partial class SocialBirdsRepository : Database
	{
		public SocialBirdsRepository() 
			: base("SMTConnection-DEV")
		{
			CommonConstruct();
		}

		public SocialBirdsRepository(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			SocialBirdsRepository GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static SocialBirdsRepository GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new SocialBirdsRepository();
        }

		[ThreadStatic] static SocialBirdsRepository _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static SocialBirdsRepository repo { get { return SocialBirdsRepository.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
		}
	}
	

    
	[TableName("dbo.AppConfigs")]
	[PrimaryKey("AppConfigKey", AutoIncrement=false)]
	[ExplicitColumns]
    public partial class AppConfig : SocialBirdsRepository.Record<AppConfig>  
    {
		[Column] public string AppConfigKey { get; set; }
		[Column] public string AppConfigValue { get; set; }
		[Column] public bool IsEditableByUser { get; set; }
		[Column] public string Description { get; set; }
	}
    
	[TableName("dbo.AppExceptionAdditionalData")]
	[ExplicitColumns]
    public partial class AppExceptionAdditionalDatum : SocialBirdsRepository.Record<AppExceptionAdditionalDatum>  
    {
		[Column] public int AppExceptionID { get; set; }
		[Column] public string Variable { get; set; }
		[Column] public string Value { get; set; }
	}
    
	[TableName("dbo.AppExceptions")]
	[PrimaryKey("AppExceptionID")]
	[ExplicitColumns]
    public partial class AppException : SocialBirdsRepository.Record<AppException>  
    {
		[Column] public int AppExceptionID { get; set; }
		[Column] public string SourceApp { get; set; }
		[Column] public DateTime OccuredOn { get; set; }
		[Column] public string Message { get; set; }
		[Column] public string OriginatedAt { get; set; }
		[Column] public string StackTrace { get; set; }
		[Column] public string InnerExceptionMessage { get; set; }
		[Column] public string HostMachine { get; set; }
		[Column] public string Level { get; set; }
		[Column] public string CustomMessage { get; set; }
	}
    
	[TableName("dbo.AppSqlLogs")]
	[ExplicitColumns]
    public partial class AppSqlLog : SocialBirdsRepository.Record<AppSqlLog>  
    {
		[Column] public string ExecutingSql { get; set; }
		[Column] public DateTime ExecutedOn { get; set; }
		[Column] public string HostMachine { get; set; }
	}
    
	[TableName("dbo.CacheConfigurations")]
	[PrimaryKey("CacheConfigurationID")]
	[ExplicitColumns]
    public partial class CacheConfiguration : SocialBirdsRepository.Record<CacheConfiguration>  
    {
		[Column] public int CacheConfigurationID { get; set; }
		[Column] public string MasterKey { get; set; }
		[Column] public string CacheKey { get; set; }
		[Column] public string Format { get; set; }
		[Column] public short Duration { get; set; }
		[Column] public short AsyncUpdate { get; set; }
		[Column] public string ApiUrl { get; set; }
		[Column] public string ApiUrlRequestType { get; set; }
		[Column] public string ClassName { get; set; }
		[Column] public string MethodName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public bool? IsActive { get; set; }
		[Column] public bool? IsAPIActive { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public bool? IsManual { get; set; }
	}
    
	[TableName("dbo.Contents")]
	[PrimaryKey("ContentID")]
	[ExplicitColumns]
    public partial class Content : SocialBirdsRepository.Record<Content>  
    {
		[Column] public int ContentID { get; set; }
		[Column] public int SocialNetworkID { get; set; }
		[Column] public int ProfileID { get; set; }
		[Column] public string Link { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Message { get; set; }
		[Column] public bool? IsShared { get; set; }
		[Column] public bool? IsDeleted { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
    
	[TableName("dbo.CPMenuNavigation")]
	[PrimaryKey("NavigationID")]
	[ExplicitColumns]
    public partial class CPMenuNavigation : SocialBirdsRepository.Record<CPMenuNavigation>  
    {
		[Column] public int NavigationID { get; set; }
		[Column] public string MenuName { get; set; }
		[Column] public string DisplayText { get; set; }
		[Column] public string AdditionalText { get; set; }
		[Column] public string LinkUrl { get; set; }
		[Column] public string IconClass { get; set; }
		[Column] public bool IsVisible { get; set; }
		[Column] public int SequenceNo { get; set; }
		[Column] public int? ParentNavigationID { get; set; }
	}
    
	[TableName("dbo.Entities")]
	[PrimaryKey("EntityID", AutoIncrement=false)]
	[ExplicitColumns]
    public partial class Entity : SocialBirdsRepository.Record<Entity>  
    {
		[Column] public short EntityID { get; set; }
		[Column] public string NameEn { get; set; }
		[Column] public int DataVersion { get; set; }
		[Column] public bool EnableActionLogging { get; set; }
		[Column] public bool EnableSEO { get; set; }
	}
    
	[TableName("dbo.EntityDetails")]
	[PrimaryKey("EntityDetailsID")]
	[ExplicitColumns]
    public partial class EntityDetail : SocialBirdsRepository.Record<EntityDetail>  
    {
		[Column] public int EntityDetailsID { get; set; }
		[Column] public short EntityID { get; set; }
		[Column] public string ColumnName { get; set; }
		[Column] public string DisplayNameEn { get; set; }
		[Column] public string DisplayNameAr { get; set; }
		[Column] public short DbTypeID { get; set; }
		[Column] public bool IsRequired { get; set; }
		[Column] public bool? IsGroup { get; set; }
		[Column] public int? ParentSubGroupID { get; set; }
		[Column] public int? ParentEntityDetailsID { get; set; }
		[Column] public bool IsForeignkey { get; set; }
		[Column] public string RefrencedTableName { get; set; }
		[Column] public bool EnableAutoComplate { get; set; }
		[Column] public string AutoCompleteSourceQuery { get; set; }
		[Column] public bool? IsDigit { get; set; }
		[Column] public string ValidationExpression { get; set; }
		[Column] public bool AddEditVisible { get; set; }
		[Column] public bool GridVisible { get; set; }
		[Column] public bool SearchFilterVisible { get; set; }
		[Column] public short MaxLength { get; set; }
		[Column] public bool IsAutoID { get; set; }
		[Column] public bool IsPrimaryKey { get; set; }
		[Column] public int? DisplaySeqNo { get; set; }
		[Column] public bool? IsFileUpload { get; set; }
		[Column] public string AllowedFiles { get; set; }
		[Column] public bool ShowGroupTitle { get; set; }
		[Column] public string PlaceHolderText { get; set; }
	}
    
	[TableName("dbo.FacebookGroupCategories")]
	[PrimaryKey("CategoryID")]
	[ExplicitColumns]
    public partial class FacebookGroupCategory : SocialBirdsRepository.Record<FacebookGroupCategory>  
    {
		[Column] public int CategoryID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public bool IsActive { get; set; }
	}
    
	[TableName("dbo.FacebookGroups")]
	[PrimaryKey("GroupID")]
	[ExplicitColumns]
    public partial class FacebookGroup : SocialBirdsRepository.Record<FacebookGroup>  
    {
		[Column] public int GroupID { get; set; }
		[Column] public int? CategoryID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string ID { get; set; }
		[Column] public string GroupURL { get; set; }
		[Column] public string GroupPhotoURL { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string Tags { get; set; }
		[Column] public string Location { get; set; }
		[Column] public int? NumberOfMembers { get; set; }
		[Column] public bool? IsPublic { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
    
	[TableName("dbo.FacebookUserGroups")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class FacebookUserGroup : SocialBirdsRepository.Record<FacebookUserGroup>  
    {
		[Column] public int ID { get; set; }
		[Column] public int FacebookGroupID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
    
	[TableName("dbo.Rights")]
	[PrimaryKey("RightID")]
	[ExplicitColumns]
    public partial class Right : SocialBirdsRepository.Record<Right>  
    {
		[Column] public int RightID { get; set; }
		[Column] public string RightName { get; set; }
		[Column] public string RightCode { get; set; }
		[Column] public string RightType { get; set; }
		[Column] public int? ApplicationID { get; set; }
		[Column] public string Tag { get; set; }
		[Column] public int Status { get; set; }
	}
    
	[TableName("dbo.Roles")]
	[PrimaryKey("RoleID")]
	[ExplicitColumns]
    public partial class Role : SocialBirdsRepository.Record<Role>  
    {
		[Column] public int RoleID { get; set; }
		[Column] public string RoleName { get; set; }
		[Column] public int? ApplicationID { get; set; }
		[Column] public bool IsSystemRole { get; set; }
	}
    
	[TableName("dbo.RolesRights")]
	[PrimaryKey("RoleRightsID", AutoIncrement=false)]
	[ExplicitColumns]
    public partial class RolesRight : SocialBirdsRepository.Record<RolesRight>  
    {
		[Column] public int RoleRightsID { get; set; }
		[Column] public int RightID { get; set; }
		[Column] public int RoleID { get; set; }
	}
    
	[TableName("dbo.SocialNetworkProfiles")]
	[PrimaryKey("ProfileID")]
	[ExplicitColumns]
    public partial class SocialNetworkProfile : SocialBirdsRepository.Record<SocialNetworkProfile>  
    {
		[Column] public int ProfileID { get; set; }
		[Column] public int SocialNetworkID { get; set; }
		[Column] public string ProfileURL { get; set; }
		[Column] public DateTime DefaultDateTime { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
    
	[TableName("dbo.SocialNetworks")]
	[PrimaryKey("SocialNetworkID", AutoIncrement=false)]
	[ExplicitColumns]
    public partial class SocialNetwork : SocialBirdsRepository.Record<SocialNetwork>  
    {
		[Column] public int SocialNetworkID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string URL { get; set; }
		[Column] public string LogoURL { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
    
	[TableName("dbo.SocialNetworkSettings")]
	[PrimaryKey("SettingID")]
	[ExplicitColumns]
    public partial class SocialNetworkSetting : SocialBirdsRepository.Record<SocialNetworkSetting>  
    {
		[Column] public int SettingID { get; set; }
		[Column] public int SocialNetworkID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public string AppID { get; set; }
		[Column] public string AppSecret { get; set; }
		[Column] public string AccessToken { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
    
	[TableName("dbo.Users")]
	[PrimaryKey("UserID")]
	[ExplicitColumns]
    public partial class User : SocialBirdsRepository.Record<User>  
    {
		[Column] public int UserID { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string Password { get; set; }
		[Column] public string FirstName { get; set; }
		[Column] public string MiddleName { get; set; }
		[Column] public string LastName { get; set; }
		[Column] public string Gender { get; set; }
		[Column] public DateTime? DateOfBirth { get; set; }
		[Column] public string DisplayName { get; set; }
		[Column] public string DisplayPictureURL { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public DateTime? CreatedOn { get; set; }
		[Column] public int? CreatedBy { get; set; }
		[Column] public DateTime? ModifiedOn { get; set; }
		[Column] public int? ModifiedBy { get; set; }
	}
}
